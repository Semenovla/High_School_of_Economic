# -*- coding: utf-8 -*-
"""Копия блокнота "Неделя1_pandas.ipynb"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YE7EbUo-4POs1esQkLVjwn6HLISDJuXx
"""

# скачиваем файл
!wget --no-check-certificate 'https://docs.google.com/uc?export=download&id=1cq9JDz8-zwzoGL6udiT_ogHHRWdnsd1q' -O math_students.csv

import pandas as pd
data = pd.read_csv('math_students.csv', delimiter=',')

"""1. Какая причина выбора школы была самой частой? В качестве ответа приведите соответствующее значение признака."""

import pandas as pd
import numpy as np
from collections import Counter
data = pd.read_csv('math_students.csv', delimiter=',')
prichina_vibora = data['reason'].mode()[0]
print(prichina_vibora)

"""2. Найдите количество студентов, у родителей которых нет никакого образования."""

import pandas as pd
import numpy as np
from collections import Counter
data = pd.read_csv('math_students.csv', delimiter=',')
stud_who_Parents_no_education = data[(data['Medu'] == 0) & (data['Fedu'] == 0)].shape[0]
print(stud_who_Parents_no_education)

"""3. Найдите минимальный возраст учащегося школы Mousinho da Silveira."""

import pandas as pd
import numpy as np
from collections import Counter
data = pd.read_csv('math_students.csv', delimiter=',')
minimum_let = data[data['school'] == 'MS']['age'].min()
print(minimum_let)

"""4. Найдите количество студентов, имеющих нечетное число пропусков."""

import pandas as pd
import numpy as np
from collections import Counter
data = pd.read_csv('math_students.csv', delimiter=',')
Propuski_nechetnoe = data[data['absences'] % 2 != 0].shape[0]
print(Propuski_nechetnoe)

"""5. Найдите разность между средними итоговыми оценками студентов, состоящих и не состоящих в романтических отношениях. В качестве ответа приведите число, округленное до двух значащих цифр после запятой."""

import pandas as pd
import numpy as np
from collections import Counter
data = pd.read_csv('math_students.csv', delimiter=',')
import pandas as pd

# Функция для вычисления разницы между средними значениями
def calculate_mean_difference(dataframe, column_name, category1, category2):
    # Группирует данные по заданной колонке
    grouped_data = dataframe.groupby(column_name)

    #  средние значения для каждой категории
    means = grouped_data.mean()

    # Извлекает значения для двух категорий
    value1 = means.loc[category1]
    value2 = means.loc[category2]
    # вычесляет среднее значение
    difference = round(abs(value1 - value2), 2)
    return difference

column_name = 'romantic'
category1 = 'yes'
category2 = 'no'

difference = calculate_mean_difference(data, column_name, category1, category2)
print(f'Разница между средними значениями для категорий "{category1}" и "{category2}" равна {difference}')

"""6. Сколько занятий пропустило большинство студентов с самым частым значением наличия внеклассных активностей?

*Примечание. В данном контексте под "большинством" подразумеваются студенты, имеющее самое частое значение пропусков. То есть в данном задании необходимо:*


* *Определить самое частое значение наличия внеклассных активностей (да или нет).*
* *Для группы студентов, соответствующей этому значению, рассмотреть значения признака «число пропусков».*
* *Для каждого значения числа пропусков посчитать, сколько студентов ему соответствует.*
* *Выбрать значение числа пропусков с наибольшим числом студентов.*


"""

import pandas as pd
import numpy as np
from collections import Counter
data = pd.read_csv('math_students.csv', delimiter=',')
# Определият наличие внеклассных активностей (да или нет)
activity_counts = data['activities'].value_counts()

#  значение с наибольшим количеством студентов
most_common_activity = activity_counts.idxmax()

# Фильтруйт данные  оставить только студентов с  активностями
filtered_data = data[data['activities'] == most_common_activity]

# исключаем студентов с нулевым числом пропусков
filtered_data = filtered_data[filtered_data['absences'] > 0]

# количество студентов для каждого значения числа пропусков
absence_counts = filtered_data['absences'].value_counts()

# значение числа пропусков с наибольшим числом студентов
most_common_absence = absence_counts.idxmax()
students_with_two_absences = data[data['absences'] == 2]

count_students_with_two_absences = len(students_with_two_absences)

print("Количество студентов с двумя пропусками:", count_students_with_two_absences)
# результат
print("Число пропусков с наибольшим числом студентов:", most_common_absence)